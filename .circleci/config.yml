version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.20
jobs:
  # The build job
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:12.15.0-stretch-browsers
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      # Lint the source code
#      - run:
#          name: Linting
#          command: npm run lint
      # Test the source code
#      - run:
#          name: Testing
#          command: npm run test
      # Build project with different configuration based on
      # the current branch
      - run:
          name: Building
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
                npm run build
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                npm run build
            else
                npm run build
            fi
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
  aws-deploy:
    working_directory: ~/project
    executor: aws-cli/default
    steps:
      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - aws-cli/setup:
          profile-name: example
      - run:
          name: Deploy to S3
          command: |
              aws s3 sync dist s3://${AWS_BUCKET} --exclude=".git" --exclude=".circleci" --delete
workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build
      - aws-deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
